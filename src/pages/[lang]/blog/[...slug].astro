---
import { type CollectionEntry, getCollection } from "astro:content"

import BaseLayout from "@layouts/BaseLayout.astro"

import ContactCTA from "@components/ContactCTA.astro"
import AnimatedUnderline from "@components/AnimatedUnderline.astro"
import Hero from "@components/Hero.astro"
import Icon from "@components/Icon.astro"
import Pill from "@components/Pill.astro"

interface Props {
    entry: CollectionEntry<"blog">
}

import { languages } from "@i18n/ui"

// This is a dynamic route that generates a page for every Markdown file in src/content/
// Read more about dynamic routes and this `getStaticPaths` function in the Astro docs:
// https://docs.astro.build/en/core-concepts/routing/#dynamic-routes
export async function getStaticPaths() {
    const blog = await getCollection("blog")

    var paths: { params: { lang: string; slug: string }; props: any }[] = []
    Object.keys(languages).map((lang) => {
        blog.map((entry) =>
            paths.push({
                params: { lang, slug: entry.slug },
                props: { entry },
            })
        )
    })
    return paths
}

import { getLangFromUrl, useTranslations, useTranslatedPath } from "@i18n/utils"

const lang = getLangFromUrl(Astro.url)
const t = useTranslations(lang)
const translatePath = useTranslatedPath(lang)

const { entry } = Astro.props
const { Content } = await entry.render()
---

<BaseLayout title={entry.data.title} description={entry.data.description}>
    <div class="stack gap-20">
        <div class="stack gap-15">
            <header class="border-b border-solid border-gray-200 pb-10">
                <div class="wrapper stack gap-2">
                    <AnimatedUnderline size="xs">
                        <a
                            class="hidden lg:flex lg:flex-row lg:gap-1"
                            href={translatePath("/blog/")}
                        >
                            <span class="my-auto">
                                <Icon icon="arrow-left" />
                            </span>
                            {t("blog.post.go_back")}
                        </a>
                    </AnimatedUnderline>
                    <Hero title={entry.data.title} align="start">
                        <div
                            class="flex flex-col items-center justify-between gap-6 p-2 md:flex-row md:gap-10"
                        >
                            <div class="flex basis-1/4 gap-2">
                                {entry.data.tags.map((t) => <Pill>{t}</Pill>)}
                            </div>
                            <p class="line-clamp-3 basis-3/4 text-xl">
                                {entry.data.description}
                            </p>
                        </div>
                    </Hero>
                </div>
            </header>
            <main class="wrapper">
                <div class="stack content gap-10">
                    <!-- { -->
                    <!--     entry.data.img && ( -->
                    <!--         <img -->
                    <!--             src={entry.data.img} -->
                    <!--             alt={entry.data.img_alt || ""} -->
                    <!--         /> -->
                    <!--     ) -->
                    <!-- } -->
                    <div class="content">
                        <Content />
                    </div>
                </div>
            </main>
            <ContactCTA />
        </div>
    </div>
</BaseLayout>
<style>
    .details {
        display: flex;
        flex-direction: column;
        padding: 0.5rem;
        gap: 1.5rem;
        justify-content: space-between;
        align-items: center;
    }

    .description {
        font-size: var(--text-lg);
        max-width: 54ch;
    }

    .content {
        max-width: 65ch;
        margin-inline: auto;
    }

    .content > :global(* + *) {
        margin-top: 1rem;
    }

    .content :global(h1),
    .content :global(h2),
    .content :global(h3),
    .content :global(h4),
    .content :global(h5) {
        margin: 1.5rem 0;
    }

    .content :global(img) {
        border-radius: 1.5rem;
        box-shadow: var(--shadow-sm);
        background: var(--gradient-subtle);
        border: 1px solid var(--gray-800);
    }

    .content :global(blockquote) {
        font-size: var(--text-lg);
        font-family: var(--font-brand);
        font-weight: 600;
        line-height: 1.1;
        padding-inline-start: 1.5rem;
        border-inline-start: 0.25rem solid var(--accent-dark);
        color: var(--gray-0);
    }

    .back-link,
    .content :global(a) {
        text-decoration: 1px solid underline transparent;
        text-underline-offset: 0.25em;
        transition: text-decoration-color var(--theme-transition);
    }

    .back-link:hover,
    .back-link:focus,
    .content :global(a:hover),
    .content :global(a:focus) {
        text-decoration-color: currentColor;
    }

    @media (min-width: 48em) {
        .content :global(blockquote) {
            font-size: var(--text-2xl);
        }
    }
</style>
